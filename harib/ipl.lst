GAS LISTING ipl10.s 			page 1


   1              	# initial program loader    
   2              	    .code16
   3              	
   4              	    .set CYLS, 10 # is this ok?
   5              	
   6 0000 EB4E     	    jmp entry # .byte 0xeb, 0x4e „ÅÆ„Åã„Çè„ÇäÔºü
   7 0002 90       	    .byte 0x90 # NOP „Çâ„Åó„ÅÑ
   8 0003 53415249 	    .ascii "SARISIA " # BS_OEMName: boot sector name
   8      53494120 
   9 000b 0002     	    .word 512 # BPB_BytePerSec
  10 000d 01       	    .byte 1 # BPB_SecPerClus
  11 000e 0100     	    .word 1 # BPB_RsvdSecCnt ‰∫àÁ¥ÑÈ†òÂüü„Çª„ÇØ„ÇøÊï∞ „Éñ„Éº„Éà„Çª„ÇØ„ÇøÂê´„ÇÄ
  12 0010 02       	    .byte 2 # BPB_NumFATs
  13 0011 E000     	    .word 224 # BPB_RootEntCnt: root directory size
  14 0013 0000     	    .word 0 # BPB_TotSec16: drive size
  15 0015 F0       	    .byte 0xf0 # BPB_Media
  16 0016 0900     	    .word 9 # BPB_FATSz16 (sector)
  17 0018 1200     	    .word 18 # BPB_SecPerTrk: sectors per track
  18 001a 0200     	    .word 2 # BPB_NumHeads: head nums
  19 001c 00000000 	    .int 0 # BPB_HiddSec: partition nums
  20 0020 400B0000 	    .int 2880 # BPB_TotSec32: drive size
  21 0024 000029   	    .byte 0, 0, 0x29 # BS_DrvNum, BS_Reserved1, BS_BootSig
  22 0027 FFFFFFFF 	    .int 0xffffffff # BS_VolID
  23 002b 48454C4C 	    .ascii "HELLOOS    " # BS_VolLab: disk name
  23      4F4F5320 
  23      202020
  24 0036 46415431 	    .ascii "FAT12   " # BS_FilSysType: format name
  24      32202020 
  25 003e 00000000 	    .skip 18 # BS_BootCode begin
  25      00000000 
  25      00000000 
  25      00000000 
  25      0000
  26              	
  27              	entry:
  28              	    # init registers
  29 0050 B80000   	    mov $0, %ax # ax: 16bit accumulator register
  30 0053 8ED0     	    mov %ax, %ss # ss: 16bit stack segment register
  31 0055 BC007C   	    mov $0x7c00, %sp # sp: 16bit stack pointer
  32 0058 8ED8     	    mov %ax, %ds # ds: 16bit data segment
  33              	
  34              	# call BIOS to read disk
  35 005a B82008   	    mov $0x0820, %ax
  36 005d 8EC0     	    mov %ax, %es # es: 16bit extra segment
  37 005f B500     	    mov $0, %ch # ch: 8bit counter high # „Ç∑„É™„É≥„ÉÄ0 (ÊúÄ„ÇÇÂ§ñÂë®)
  38 0061 B600     	    mov $0, %dh # dh: 8bit data high # „Éò„ÉÉ„Éâ0 (Ë°®)
  39 0063 B102     	    mov $2, %cl # cl: 8bit counter low # „Çª„ÇØ„Çø2 („Çª„ÇØ„Çø1„ÅØIPL„ÄÅ„Å§„Åæ„Çä„Åì„Çå „Çª„ÇØ„Çø„Ç
  40              	
  41              	readloop:
  42 0065 BE0000   	    mov $0, %si # fail counter
  43              	retry:
  44 0068 B402     	    mov $0x02, %ah # disk read
  45 006a B001     	    mov $1, %al # num of sectors to process
  46 006c BB0000   	    mov $0, %bx # buffer address?
  47 006f B200     	    mov $0x00, %dl # dl: 8bit data low
  48 0071 CD13     	    int $0x13 # BIOS: disk
  49              	
GAS LISTING ipl10.s 			page 2


  50              	    # success
  51 0073 7310     	    jnc next # bios returns CF=0 if success else CF=1
  52              	
  53              	    # fail
  54 0075 83C601   	    add $1, %si
  55 0078 83FE05   	    cmp $5, %si # flag: o..szapc
  56 007b 7332     	    jae error # jump above or equal
  57              	
  58              	    # call BIOS to reset
  59 007d B400     	    mov $0x00, %ah # reset
  60 007f B200     	    mov $0x00, %dl # drive index (fda)
  61 0081 CD13     	    int $0x13 # BIOS: disk
  62 0083 EBE3     	    jmp retry
  63              	
  64              	next:
  65 0085 8CC0     	    mov %es, %ax # x86 do not have  `ADD ES addr`
  66 0087 83C020   	    add $0x20, %ax # 512 byte (1 sector) / 16 (memory index segment)
  67 008a 8EC0     	    mov %ax, %es
  68 008c 80C101   	    add $1, %cl # „Çª„ÇØ„Çø„Çí„Ç§„É≥„ÇØ„É™„É°„É≥„Éà
  69 008f 80F912   	    cmp $18, %cl 
  70              	
  71              	    # if %cl (sector) <= 18
  72 0092 76D1     	    jbe readloop # jump below or equal
  73              	
  74              	    # else
  75 0094 B101     	    mov $1, %cl # reset sector
  76 0096 80C601   	    add $1, %dh # add head 1
  77 0099 80FE02   	    cmp $2, %dh
  78              	
  79              	    # if dh (head) < 2
  80 009c 72C7     	    jb readloop
  81              	
  82              	    # else
  83 009e B600     	    mov $0, %dh # reset head to 0
  84 00a0 80C501   	    add $1, %ch # increment cylinder
  85 00a3 80FD0A   	    cmp $CYLS, %ch
  86              	
  87              	    # if %ch (cylinder) < CYLS
  88 00a6 72BD     	    jb readloop # jump below
  89              	
  90              	    # execute haribote.sys
  91              	    # 0x8000 „Å´ÊúÄÂàù„ÅÆ„Çª„ÇØ„Çø„ÅåË™≠„ÅøËæº„Åæ„Çå„Çã („Åæ„Å†Ë™≠„ÅøËæº„Çì„Åß„ÅÑ„Å™„ÅÑ„Åå)
  92              	    # haribote.sys „ÅØ (mkfs.fat + mount „Åß„Ç§„É°„Éº„Ç∏„Çí‰Ωú„Çã„Å®) „Ç§„É°„Éº„Ç∏‰∏ä„ÅÆ 0x4400 „Å´
  93              	    # „ÅÆ„Åß„ÄÅharibote.sys „ÅåÈÖçÁΩÆ„Åï„Çå„Å¶„ÅÑ„Çã„ÅÆ„ÅØ„É°„É¢„É™‰∏ä„ÅÆ 0x8000 + 0x4400 = 0xc400
  94              	
  95              	    # „Å®„Çä„ÅÇ„Åà„ÅöÊú¨„ÅÆ„É°„É¢„É™„Éû„ÉÉ„Éó„Å´Âêà„Çè„Åõ„Çã„Åü„ÇÅ„Å´ mformat, mcopy „Åß„ÇÑ„Çã
  96              	    # Âæå„Åß mkfs.fat + mount „Å´Êàª„Åó„Åü„ÅÑ
  97              	    # „Åì„ÅÆÂ†¥Âêà„ÅØ 0x8000 + 0x4200 = 0xc200
  98 00a8 882EF00F 	    mov %ch, 0x0ff0
  99 00ac E90000   	    jmp 0xc200
 100              	
 101              	error:
 102 00af BE0000   	    mov $msg, %si
 103              	putloop:
 104 00b2 8A04     	    mov (%si), %al # al: 8bit accumulator low
 105 00b4 83C601   	    add $1, %si
 106 00b7 3C00     	    cmp $0, %al # cmp overwrites flag register  # if %al is 0, stop output chars
GAS LISTING ipl10.s 			page 3


 107 00b9 7409     	    je fin
 108 00bb B40E     	    mov $0x0e, %ah # 8bit ah: accumlator high # bios output char function
 109 00bd BB0F00   	    mov $15, %bx # bx: 16bit base register
 110 00c0 CD10     	    int $0x10 # bios interrupt call
 111 00c2 EBEE     	    jmp putloop
 112              	fin:
 113 00c4 F4       	    hlt
 114 00c5 EBFD     	    jmp fin
 115              	
 116              	msg:
 117 00c7 0A0A     	    .ascii "\n\n"
 118 00c9 6C6F6164 	    .ascii "load error!"
 118      20657272 
 118      6F7221
 119 00d4 0A00     	    .asciz "\n" # https://sourceware.org/binutils/docs/as/Asciz.html#Asciz
 120 00d6 00       	    .byte 0 # terminate character
 121              	
 122              	# finalize boot sector
 123 00d7 00000000 	    .org 0x01fe # 0x7dfe „Åß„ÅØ„Å™„ÅÑ
 123      00000000 
 123      00000000 
 123      00000000 
 123      00000000 
 124 01fe 55AA     	    .byte 0x55, 0xaa # BS_BootSign
 125              	
 126              	# followed by FAT1, FAT2, RootDirTable actual bytes
GAS LISTING ipl10.s 			page 4


DEFINED SYMBOLS
             ipl10.s:4      *ABS*:000000000000000a CYLS
             ipl10.s:27     .text:0000000000000050 entry
             ipl10.s:41     .text:0000000000000065 readloop
             ipl10.s:43     .text:0000000000000068 retry
             ipl10.s:64     .text:0000000000000085 next
             ipl10.s:101    .text:00000000000000af error
             ipl10.s:116    .text:00000000000000c7 msg
             ipl10.s:103    .text:00000000000000b2 putloop
             ipl10.s:112    .text:00000000000000c4 fin

NO UNDEFINED SYMBOLS
